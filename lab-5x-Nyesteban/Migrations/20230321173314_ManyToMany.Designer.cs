// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab_1_Nyesteban.DAL;

#nullable disable

namespace lab_1_Nyesteban.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20230321173314_ManyToMany")]
    partial class ManyToMany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3");

            modelBuilder.Entity("lab_1_Nyesteban.Models.App", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AppPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("AppSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppVersion")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyEstablishmentYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CompanyRating")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CompanyRevenue")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.DevelopmentDetail", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DevelopmentCosts")
                        .HasColumnType("TEXT");

                    b.Property<int>("DevelopmentTimeInHours")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompanyId", "AppId");

                    b.HasIndex("AppId");

                    b.ToTable("DevelopmentDetails");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GameRating")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.DevelopmentDetail", b =>
                {
                    b.HasOne("lab_1_Nyesteban.Models.App", "App")
                        .WithMany("DevelopmentDetails")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab_1_Nyesteban.Models.Company", "Company")
                        .WithMany("DevelopmentDetails")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.Game", b =>
                {
                    b.HasOne("lab_1_Nyesteban.Models.Company", null)
                        .WithMany("Games")
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.App", b =>
                {
                    b.Navigation("DevelopmentDetails");
                });

            modelBuilder.Entity("lab_1_Nyesteban.Models.Company", b =>
                {
                    b.Navigation("DevelopmentDetails");

                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
